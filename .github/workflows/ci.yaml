name: CI

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  clone_vendors:
    name: Clone vendors
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Install tree-sitter cli
      run: npm install -g tree-sitter-cli
    - uses: pdm-project/setup-pdm@v4
      with:
        python-version: '3.9'
        cache: true
    - name: Install Dependencies
      run: pdm install -v --no-self
    - name: Clone vendors
      run: pdm run scripts/clone_vendors.py
    - uses: actions/upload-artifact@v4
      with:
        name: language-parsers
        path: parsers
  validate:
    needs: clone_vendors
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers
    - uses: pdm-project/setup-pdm@v4
      with:
        python-version: '3.9'
        cache: true
    - name: Install Dependencies
      run: pdm install -v
    - name: Load Cached Pre-Commit Dependencies
      id: cached-pre-commit-dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Lint
      run: pdm run pre-commit run --show-diff-on-failure --color=always --all-files
  test:
    needs: clone_vendors
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers
    - uses: pdm-project/setup-pdm@v4
      with:
        python-version: '3.9'
        cache: true
    - name: Install
      run: pdm install
    - name: Test
      run: pdm run test
  build-sdist:
    needs: [validate, test]
    name: Build source dist
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers
    - uses: pdm-project/setup-pdm@v4
      with:
        python-version: '3.9'
        cache: true
    - name: Set path in environment
      run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
    - name: Install and build extensions
      run: pdm install -v
      env:
        PROJECT_ROOT: ${{github.workspace}}
    - name: Build source dist
      run: pdm build --no-wheel -v
      env:
        PROJECT_ROOT: ${{github.workspace}}
  build-wheels:
    needs: [validate, test]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    name: Build wheel on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers
    - uses: pdm-project/setup-pdm@v4
      with:
        python-version: '3.9'
        cache: true
    - name: Set path in environment
      run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
    - name: Install and build extensions
      run: pdm install -v
      env:
        PROJECT_ROOT: ${{github.workspace}}
    - name: Build wheels
      run: pdm build --no-sdist -v
      env:
        PROJECT_ROOT: ${{github.workspace}}


  test-msys2:
    needs: clone_vendors
    strategy:
      matrix:
        sys: [MINGW64, UCRT64, CLANG64]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        update: true
        install: base-devel
        pacboy: >-
          python:p
          python-pip:p
          python-msgpack:p
          python-pygments:p
          python-httpx:p
          python-filelock:p
          python-anyio:p
          python-certifi:p
          python-rich:p     
    - name: Install PDM
      shell: msys2 {0}
      run: pip install pdm
    - name: Install Dependencies
      shell: msys2 {0}
      run: pdm install -v
    - name: Run Tests
      shell: msys2 {0}
      run: pdm run test
